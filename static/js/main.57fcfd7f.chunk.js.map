{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","url","stats","className","styles","profile","description","src","alt","avatar","label","quantity","followers","views","likes","defaultProps","Statistics","title","statistics","statList","map","stat","item","percentage","id","FriendList","friends","friend_list","isOnline","statusOnline","statusOffline","width","TransactionHistory","items","transaction_history","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57fcfd7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__-4zhF\",\"description\":\"Profile_description__2C55N\",\"avatar\":\"Profile_avatar__169mt\",\"name\":\"Profile_name__1BdkQ\",\"stats\":\"Profile_stats__3P979\",\"label\":\"Profile_label__27lFQ\",\"quantity\":\"Profile_quantity__2iVth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3Ulvk\",\"title\":\"Statistics_title__3AOp8\",\"statList\":\"Statistics_statList__2NhGr\",\"item\":\"Statistics_item__PR_SJ\",\"label\":\"Statistics_label__1IXTn\",\"percentage\":\"Statistics_percentage__nwkkQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__IlXem\",\"item\":\"FriendList_item__3t9gW\",\"statusOnline\":\"FriendList_statusOnline__37MAm\",\"statusOffline\":\"FriendList_statusOffline__dVNvm\",\"avatar\":\"FriendList_avatar__FMx_N\",\"name\":\"FriendList_name__2xqnX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__3VE42\"};","//import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\nconst Profile = ({name, tag,  location, url,  stats}) => {\r\n     return(\r\n      <div className={styles.profile}>\r\n       <div className={styles.description}>\r\n    <img\r\n      src={url}\r\n      alt={name}\r\n      className={styles.avatar}\r\n    />\r\n    <p className={styles.name}>{name}</p>\r\n    <p className={styles.tag}>@{tag}</p>\r\n    <p className={styles.location}>{location}</p>\r\n  </div>\r\n\r\n        <ul className={styles.stats}>\r\n    <li>\r\n      <span className={styles.label}>Followers</span>\r\n      <span className={styles.quantity}>{stats.followers}</span>\r\n    </li>\r\n    <li>\r\n      <span className={styles.label}>Views</span>\r\n      <span className={styles.quantity}>{stats.views}</span>\r\n    </li>\r\n    <li>\r\n      <span className={styles.label}>Likes</span>\r\n      <span className={styles.quantity}>{stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n      </div>  \r\n    );\r\n};\r\nProfile.defaultProps = {\r\n    tag: \"\",\r\n  stats: {\r\n    followers: 0,\r\n    views: 0,\r\n    likes: 0,\r\n  },\r\n\r\n};\r\nProfile.propTypes = {\r\n  url: PropTypes.string.isRequired, //если не важно...\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string.isRequired,\r\n  //stats: PropTypes.number.isRequired,\r\n  stats: PropTypes.objectOf(PropTypes.number),\r\n};\r\n//https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\r\nexport default Profile;","//import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\n  /*  const rondomBackgrounColor = () => {\r\n    const color = 'rgb(' + (Math.floor((256 - 199) * Math.random()) + 200) + ',' +\r\n      (Math.floor((256 - 199) * Math.random()) + 200) + ',' +\r\n      (Math.floor((256 - 199) * Math.random()) + 200) + ')';\r\n   return {\r\n      background: `${rondomBackgrounColor(color)}`,\r\n    };\r\n  };// почемуууу((\r\nreturn (*/\r\nconst Statistics = ({ title, stats }) => (\r\n\r\n    <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n    \r\n  <ul className={styles.statList}>\r\n      {stats.map(stat => (\r\n        <li className={styles.item} key={stat.id} >\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage}%</span>\r\n        </li>\r\n      ))}\r\n  </ul>\r\n</section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n/*        <ul>\r\n                {colors.map((color) => (\r\n                    <li key={color}>{color}</li>//key может быть index\r\n                ))}\r\n            </ul>*/ \r\nexport default Statistics;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./FriendList.module.css\";\r\n//<ul class=\"friend-list\">\r\n // <!-- Произвольное кол-во FriendListItem, в зависимости от кол-ва объектов в массиве -->\r\n//</ul>\r\n\r\nconst FriendList = ({ friends }) => (\r\n\r\n  <ul className={styles.friend_list}>\r\n    {friends.map(({id, isOnline, avatar, name}) => (\r\n      <li className={styles.item} key={id}>\r\n        <span className={isOnline? styles.statusOnline:styles.statusOffline}></span>{/*isOnline? green true : red false*/}\r\n         <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n        <p className={styles.name}>{name}</p>\r\n      </li>\r\n      ))}\r\n  </ul> \r\n);\r\n \r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default FriendList;\r\n/*или так, документации.\r\nfunction FriendList(props) {\r\n  const friends = props.friends;\r\n  const FriendListItem = friends.map(({id, isOnline, avatar, name}) =>\r\n    <li className=\"item\" key={id}>\r\n      <span className=\"status\">{isOnline}</span>\r\n      <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n  return (<ul className=\"friend-list\">{FriendListItem}</ul>\r\n  );\r\n}*/ ","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n \r\nconst TransactionHistory = ({items}) => (\r\n    <table className={styles.transaction_history}>\r\n  <thead>\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {items.map(item=> (\r\n    <tr key={item.id}>\r\n      <td>{item.type}</td>\r\n      <td>{item.amount}</td>\r\n      <td>{item.currency}</td>\r\n    </tr>))}\r\n  </tbody>\r\n</table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n     id: PropTypes.string.isRequired,\r\n     type: PropTypes.string.isRequired,\r\n     amount: PropTypes.number.isRequired,\r\n     currency: PropTypes.string.isRequired,\r\n    }) \r\n  )\r\n}\r\nexport default TransactionHistory;","//import React from \"react\";\n//import PropTypes from \"prop-types\";\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\n\nimport user from \"./components/Profile/user.json\";\nimport statisticalData from \"./components/Statistics/statistical-data.json\";\nimport friends from \"./components/FriendList/friends.json\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        url={user.avatar}\n        stats={user.stats}\n      />\n     <Statistics title=\"Upload stats\" stats={statisticalData} />\n     <Statistics stats={statisticalData} />\n      \n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n//import './index.css';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n/*function randColor(elem) {\n/*СОЗДАЕМ ПЕРЕМЕННЫЕ\nelem - элемент которому будем менять задний фон\ncode_color - получаем элемент в который будет выводить код цвета\nr,g,b - отвечают за кодировку и вместе выводят цвет\ncolor - в нее записываем полную строку значения цвета\n*/\n           /* var element = document.querySelector(elem),\n                code_color = document.querySelector('.code_color'),\n                r = Math.floor(Math.random() * (256)),\n                g = Math.floor(Math.random() * (256)),\n                b = Math.floor(Math.random() * (256)),\n                color = '#' + r.toString(16) + g.toString(16) + b.toString(16);\n\n            element.style.background = color;\n            code_color.innerText = color;\n        }\nrandColor(element);\n    <div class=\"code_color\">#ffffff</div>\n    <button onclick=\"randColor('.example')\">Нажми</button>*/\n\n"],"sourceRoot":""}